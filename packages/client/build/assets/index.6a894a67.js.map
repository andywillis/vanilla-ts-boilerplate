{"version":3,"file":"index.6a894a67.js","sources":["../../vite/modulepreload-polyfill","../../src/components/Heading/index.ts","../../src/main.ts"],"sourcesContent":["__VITE_IS_MODERN__&&(function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n}());","import classnames from 'classnames';\n\nimport style from './style.module.css';\n\nexport default function Heading({ size, color, text }) {\n\n  const cls = classnames(style[color]);\n\n  return `<h${size} class=\"${cls}\">${text}</h${size}>`;\n\n}\n","import Heading from './components/Heading';\n\nconst main = document.querySelector('main');\n\nconst response = await fetch('/json');\nconst { message } = await response.json();\n\nmain.innerHTML = `\n  <main>\n    ${Heading({ size: 1, color: 'blue', text: message })}\n  </main>\n`;\n\nexport {};\n"],"names":["relList","link","processPreload","mutations","mutation","node","getFetchOpts","script","fetchOpts","Heading","size","color","text","cls","classnames","style","main","response","message"],"mappings":"qCAAqB,UAAoB,CACrC,MAAMA,EAAU,SAAS,cAAc,MAAM,EAAE,QAC/C,GAAIA,GAAWA,EAAQ,UAAYA,EAAQ,SAAS,eAAe,EAC/D,OAEJ,UAAWC,KAAQ,SAAS,iBAAiB,2BAA2B,EACpEC,EAAeD,CAAI,EAEvB,IAAI,iBAAkBE,GAAc,CAChC,UAAWC,KAAYD,EACnB,GAAIC,EAAS,OAAS,YAGtB,UAAWC,KAAQD,EAAS,WACpBC,EAAK,UAAY,QAAUA,EAAK,MAAQ,iBACxCH,EAAeG,CAAI,CAGvC,CAAK,EAAE,QAAQ,SAAU,CAAE,UAAW,GAAM,QAAS,EAAI,CAAE,EACvD,SAASC,EAAaC,EAAQ,CAC1B,MAAMC,EAAY,CAAA,EAClB,OAAID,EAAO,YACPC,EAAU,UAAYD,EAAO,WAC7BA,EAAO,iBACPC,EAAU,eAAiBD,EAAO,gBAClCA,EAAO,cAAgB,kBACvBC,EAAU,YAAc,UACnBD,EAAO,cAAgB,YAC5BC,EAAU,YAAc,OAExBA,EAAU,YAAc,cACrBA,CACV,CACD,SAASN,EAAeD,EAAM,CAC1B,GAAIA,EAAK,GAEL,OACJA,EAAK,GAAK,GAEV,MAAMO,EAAYF,EAAaL,CAAI,EACnC,MAAMA,EAAK,KAAMO,CAAS,CAC7B,CACL,wCCtCA,SAAwBC,EAAQ,CAAE,KAAAC,EAAM,MAAAC,EAAO,KAAAC,GAAQ,CAE/C,MAAAC,EAAMC,EAAWC,EAAMJ,EAAM,EAE5B,MAAA,KAAKD,YAAeG,MAAQD,OAAUF,IAE/C,CCRA,MAAMM,EAAO,SAAS,cAAc,MAAM,EAEpCC,EAAW,MAAM,MAAM,OAAO,EAC9B,CAAE,QAAAC,CAAY,EAAA,MAAMD,EAAS,KAAK,EAExCD,EAAK,UAAY;AAAA;AAAA,MAEXP,EAAQ,CAAE,KAAM,EAAG,MAAO,OAAQ,KAAMS,EAAS;AAAA;"}